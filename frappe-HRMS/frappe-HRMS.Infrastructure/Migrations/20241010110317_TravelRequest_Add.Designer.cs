// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using frappe_HRMS.Infrastructure.Context;

#nullable disable

namespace frappe_HRMS.Infrastructure.Migrations
{
    [DbContext(typeof(HRMSDbContext))]
    [Migration("20241010110317_TravelRequest_Add")]
    partial class TravelRequest_Add
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("frappe_HRMS.Domain.Attendance.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("EarlyEntry")
                        .HasColumnType("bit");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool?>("LateEntry")
                        .HasColumnType("bit");

                    b.Property<int?>("ShiftTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ShiftTypeId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Attendance.AttendanceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("HalfDay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("HalfDayDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IncludeHolidays")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ShiftTypeId");

                    b.ToTable("AttendanceRequests");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Attendance.EmployeeCheckin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Location_Device_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SkipAutoAttendance")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeCheckin");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Attendance.HolidayList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HolidayListName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TotalHolidays")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HolidayList");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Attendance.ShiftType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableAutoAttendance")
                        .HasColumnType("bit");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RosterColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ShiftTypes");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.AccountingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ClearanceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("ProjectId");

                    b.ToTable("AccountingDetails");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.CostingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int>("ExpenseClaimTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("FundedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SponseredAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TravelRequestId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseClaimTypeId");

                    b.HasIndex("TravelRequestId");

                    b.ToTable("CostingDetails");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("IdentificationDocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TravelRequestId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TravelRequestId");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.ExpenseClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountingDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("ApprovalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountingDetailsId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ExpenseClaims");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.ExpenseClaimType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExpenseClaimTypes");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.Expenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int?>("ExpenseClaimId")
                        .HasColumnType("int");

                    b.Property<int>("ExpenseClaimTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SanctionAmount")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseClaimId");

                    b.HasIndex("ExpenseClaimTypeId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.PurposeOfTravel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("PurposeofTravel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TravelRequestId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TravelRequestId");

                    b.ToTable("PurposeOfTravels");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.TravelItinerary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ArrivalDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DepartureDatetime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLodgingRequired")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTravelAdvanceRequired")
                        .HasColumnType("bit");

                    b.Property<string>("MealPreference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeOfTravel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TravelRequestId")
                        .HasColumnType("int");

                    b.Property<string>("TravelTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TravelRequestId");

                    b.ToTable("TravelItineraries");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.TravelRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressofOrganizer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyOtherDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailsofSponsor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("IdentificationDocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfOrganizer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurposeOfTravelId")
                        .HasColumnType("int");

                    b.Property<string>("TravelFunding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PurposeOfTravelId");

                    b.ToTable("TravelRequests");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Company.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Company.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyAbbrevation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateofEstablishment")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FinancialYearBeginsOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDemo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfEmployess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Company.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<string>("ParentDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayrollCostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Company.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesignationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Designation");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Company.EmploymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmploymentType");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.CostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CostCenterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<string>("ParentCostCenter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CostCenters");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EducationalQualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MajorSubjects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("YearOfPassing")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EducationalQualifications");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofJoining")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeAttendanceLeavesId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeGradeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeSalaryId")
                        .HasColumnType("int");

                    b.Property<int?>("EmploymentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmplyeeJoiningId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int?>("ExitId")
                        .HasColumnType("int");

                    b.Property<string>("FirsetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonalId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("ReportsTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salutation")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("EmployeeAddressId");

                    b.HasIndex("EmployeeAttendanceLeavesId");

                    b.HasIndex("EmployeeGradeId");

                    b.HasIndex("EmployeeSalaryId");

                    b.HasIndex("EmploymentTypeId");

                    b.HasIndex("EmplyeeJoiningId");

                    b.HasIndex("ExitId");

                    b.HasIndex("PersonalId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("UserId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EmployeeAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CurrentAddressIs")
                        .HasColumnType("bit");

                    b.Property<string>("EmergencyContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PermanentAddressIs")
                        .HasColumnType("bit");

                    b.Property<string>("PersonalEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferedContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeAddresses");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EmployeeAttendanceLeaves", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttendanceDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int?>("ExpenseApproverId")
                        .HasColumnType("int");

                    b.Property<int?>("HolidayListId")
                        .HasColumnType("int");

                    b.Property<int?>("LeaveApproverId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftRequestApproverId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseApproverId");

                    b.HasIndex("HolidayListId");

                    b.HasIndex("LeaveApproverId");

                    b.HasIndex("ShiftRequestApproverId");

                    b.HasIndex("ShiftTypeId");

                    b.ToTable("EmployeeAttendanceLeaves");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EmployeeGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultSalaryStructure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeGrade");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EmployeeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeGroup");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EmployeeHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeHistory");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EmployeeProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BioCoverLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EducationalQualificationId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeHistoryId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int?>("PreviousWorkExperienceId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EducationalQualificationId");

                    b.HasIndex("EmployeeHistoryId");

                    b.HasIndex("PreviousWorkExperienceId");

                    b.ToTable("EmployeeProfiles");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EmployeeSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CTC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("PANNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvidentFundAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalaryCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalaryMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CostCenterId");

                    b.ToTable("EmployeeSalaries");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EmplyeeJoiningDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ContractEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfRetirement")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int?>("JobApplicantId")
                        .HasColumnType("int");

                    b.Property<int?>("NoticeDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OfferDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JobApplicantId");

                    b.ToTable("EmplyeeJoiningDetails");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.Exit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExitInterviewHeldOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("LeaveEncashed")
                        .HasColumnType("bit");

                    b.Property<string>("NewWorkPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonforLeaving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RelievingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ResignationLetterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Exits");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.NewJobApplicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ApplicantRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("LowerRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NewJobOpeningId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResumeLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpperRange")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DesignationId");

                    b.HasIndex("NewJobOpeningId");

                    b.ToTable("NewJobApplicant");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.NewJobOpening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosesOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("int");

                    b.Property<int?>("EmploymentTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("JobApplicationRoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LowerRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PostedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("PublishApplicationsReceived")
                        .HasColumnType("bit");

                    b.Property<bool?>("PublishOnWebsite")
                        .HasColumnType("bit");

                    b.Property<bool?>("PublishSalaryRange")
                        .HasColumnType("bit");

                    b.Property<string>("ReportsTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Route")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalaryPaidPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpperRange")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("EmploymentTypeId");

                    b.ToTable("NewJobOpening");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.PersonalDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateofIssue")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyBackground")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthInsuranceProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceofIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidUpto")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PersonalDetails");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.PreviousWorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Salary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalExperience")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PreviousWorkExperience");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Leave.CompensatoryLeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool?>("HalfDay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("HalfDayDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WorkEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WorkFromDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("CompensatoryLeaveRequests");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Leave.LeaveApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool?>("FollowviaEmail")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("HalfDay")
                        .HasColumnType("bit");

                    b.Property<string>("LeaveApprover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("LeaveApplications");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Leave.LeaveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AllowEncashment")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowNegativeBalance")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowOverAllocation")
                        .HasColumnType("bit");

                    b.Property<int?>("ApplicableAfter")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int?>("ExpireCarryForwardedLeaves")
                        .HasColumnType("int");

                    b.Property<bool?>("Includeholidayswithinleavesasleaves")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCarryForward")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCompensatory")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEarnedLeave")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLeaveWithoutPay")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOptionalLeave")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPartiallyPaidLeave")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaximumCarryForwardedLeaves")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaximumEncashableLeaves")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MaximumLeaveAllocationAllowed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MaximumonsecutiveLeavesAllowed")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonEncashableLeaves")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Intrests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Attendance.Attendance", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Company.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("frappe_HRMS.Domain.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("frappe_HRMS.Domain.Attendance.ShiftType", "ShiftType")
                        .WithMany()
                        .HasForeignKey("ShiftTypeId");

                    b.Navigation("Company");

                    b.Navigation("Employee");

                    b.Navigation("ShiftType");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Attendance.AttendanceRequest", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Company.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("frappe_HRMS.Domain.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("frappe_HRMS.Domain.Attendance.ShiftType", "ShiftType")
                        .WithMany()
                        .HasForeignKey("ShiftTypeId");

                    b.Navigation("Company");

                    b.Navigation("Employee");

                    b.Navigation("ShiftType");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Attendance.EmployeeCheckin", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.AccountingDetails", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Employee.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId");

                    b.HasOne("frappe_HRMS.Domain.Claim.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("CostCenter");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.CostingDetails", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Claim.ExpenseClaimType", "ExpenseClaimType")
                        .WithMany()
                        .HasForeignKey("ExpenseClaimTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("frappe_HRMS.Domain.Claim.TravelRequest", null)
                        .WithMany("CostingDetails")
                        .HasForeignKey("TravelRequestId");

                    b.Navigation("ExpenseClaimType");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.DocumentType", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Claim.TravelRequest", "TravelRequest")
                        .WithMany()
                        .HasForeignKey("TravelRequestId");

                    b.Navigation("TravelRequest");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.ExpenseClaim", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Claim.AccountingDetails", "AccountingDetails")
                        .WithMany()
                        .HasForeignKey("AccountingDetailsId");

                    b.HasOne("frappe_HRMS.Domain.Company.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("frappe_HRMS.Domain.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("AccountingDetails");

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.Expenses", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Claim.ExpenseClaim", null)
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseClaimId");

                    b.HasOne("frappe_HRMS.Domain.Claim.ExpenseClaimType", "ExpenseClaimType")
                        .WithMany()
                        .HasForeignKey("ExpenseClaimTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseClaimType");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.Project", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Company.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.PurposeOfTravel", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Claim.TravelRequest", "TravelRequest")
                        .WithMany()
                        .HasForeignKey("TravelRequestId");

                    b.Navigation("TravelRequest");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.TravelItinerary", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Claim.TravelRequest", "TravelRequest")
                        .WithMany("TravelItinerary")
                        .HasForeignKey("TravelRequestId");

                    b.Navigation("TravelRequest");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.TravelRequest", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Company.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("frappe_HRMS.Domain.Employee.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId");

                    b.HasOne("frappe_HRMS.Domain.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("frappe_HRMS.Domain.Claim.PurposeOfTravel", "PurposeOfTravel")
                        .WithMany()
                        .HasForeignKey("PurposeOfTravelId");

                    b.Navigation("Company");

                    b.Navigation("CostCenter");

                    b.Navigation("Employee");

                    b.Navigation("PurposeOfTravel");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Company.Department", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Company.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.CostCenter", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Company.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EducationalQualification", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Employee.Employee", "Employee")
                        .WithMany("EducationalQualifications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.Employee", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Company.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("frappe_HRMS.Domain.Company.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId");

                    b.HasOne("frappe_HRMS.Domain.Company.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId");

                    b.HasOne("frappe_HRMS.Domain.Employee.EmployeeAddress", "EmployeeAddress")
                        .WithMany()
                        .HasForeignKey("EmployeeAddressId");

                    b.HasOne("frappe_HRMS.Domain.Employee.EmployeeAttendanceLeaves", "EmployeeAttendanceLeaves")
                        .WithMany()
                        .HasForeignKey("EmployeeAttendanceLeavesId");

                    b.HasOne("frappe_HRMS.Domain.Employee.EmployeeGrade", "EmployeeGrade")
                        .WithMany()
                        .HasForeignKey("EmployeeGradeId");

                    b.HasOne("frappe_HRMS.Domain.Employee.EmployeeSalary", "EmployeeSalary")
                        .WithMany()
                        .HasForeignKey("EmployeeSalaryId");

                    b.HasOne("frappe_HRMS.Domain.Company.EmploymentType", "EmploymentType")
                        .WithMany()
                        .HasForeignKey("EmploymentTypeId");

                    b.HasOne("frappe_HRMS.Domain.Employee.EmplyeeJoiningDetails", "EmplyeeJoiningDetails")
                        .WithMany()
                        .HasForeignKey("EmplyeeJoiningId");

                    b.HasOne("frappe_HRMS.Domain.Employee.Exit", "Exit")
                        .WithMany()
                        .HasForeignKey("ExitId");

                    b.HasOne("frappe_HRMS.Domain.Employee.PersonalDetails", "Personal")
                        .WithMany()
                        .HasForeignKey("PersonalId");

                    b.HasOne("frappe_HRMS.Domain.Employee.EmployeeProfile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");

                    b.HasOne("frappe_HRMS.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Branch");

                    b.Navigation("Company");

                    b.Navigation("Designation");

                    b.Navigation("EmployeeAddress");

                    b.Navigation("EmployeeAttendanceLeaves");

                    b.Navigation("EmployeeGrade");

                    b.Navigation("EmployeeSalary");

                    b.Navigation("EmploymentType");

                    b.Navigation("EmplyeeJoiningDetails");

                    b.Navigation("Exit");

                    b.Navigation("Personal");

                    b.Navigation("Profile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EmployeeAttendanceLeaves", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.User", "ExpenseApprover")
                        .WithMany()
                        .HasForeignKey("ExpenseApproverId");

                    b.HasOne("frappe_HRMS.Domain.Attendance.HolidayList", "HolidayList")
                        .WithMany()
                        .HasForeignKey("HolidayListId");

                    b.HasOne("frappe_HRMS.Domain.User", "LeaveApprover")
                        .WithMany()
                        .HasForeignKey("LeaveApproverId");

                    b.HasOne("frappe_HRMS.Domain.User", "ShiftRequestApprover")
                        .WithMany()
                        .HasForeignKey("ShiftRequestApproverId");

                    b.HasOne("frappe_HRMS.Domain.Attendance.ShiftType", "ShiftType")
                        .WithMany()
                        .HasForeignKey("ShiftTypeId");

                    b.Navigation("ExpenseApprover");

                    b.Navigation("HolidayList");

                    b.Navigation("LeaveApprover");

                    b.Navigation("ShiftRequestApprover");

                    b.Navigation("ShiftType");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EmployeeHistory", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Company.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("frappe_HRMS.Domain.Company.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("frappe_HRMS.Domain.Company.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId");

                    b.HasOne("frappe_HRMS.Domain.Employee.Employee", "Employee")
                        .WithMany("EmployeeHistories")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EmployeeProfile", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Employee.EducationalQualification", "EducationalQualification")
                        .WithMany()
                        .HasForeignKey("EducationalQualificationId");

                    b.HasOne("frappe_HRMS.Domain.Employee.EmployeeHistory", "EmployeeHistory")
                        .WithMany()
                        .HasForeignKey("EmployeeHistoryId");

                    b.HasOne("frappe_HRMS.Domain.Employee.PreviousWorkExperience", "PreviousWorkExperience")
                        .WithMany()
                        .HasForeignKey("PreviousWorkExperienceId");

                    b.Navigation("EducationalQualification");

                    b.Navigation("EmployeeHistory");

                    b.Navigation("PreviousWorkExperience");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EmployeeSalary", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Employee.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId");

                    b.Navigation("CostCenter");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.EmplyeeJoiningDetails", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Employee.NewJobApplicant", "JobApplicant")
                        .WithMany()
                        .HasForeignKey("JobApplicantId");

                    b.Navigation("JobApplicant");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.NewJobApplicant", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Company.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId");

                    b.HasOne("frappe_HRMS.Domain.Employee.NewJobOpening", "NewJobOpening")
                        .WithMany()
                        .HasForeignKey("NewJobOpeningId");

                    b.Navigation("Designation");

                    b.Navigation("NewJobOpening");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.NewJobOpening", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Company.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("frappe_HRMS.Domain.Company.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("frappe_HRMS.Domain.Company.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("frappe_HRMS.Domain.Company.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId");

                    b.HasOne("frappe_HRMS.Domain.Company.EmploymentType", "EmploymentType")
                        .WithMany()
                        .HasForeignKey("EmploymentTypeId");

                    b.Navigation("Branch");

                    b.Navigation("Company");

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("EmploymentType");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.PreviousWorkExperience", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Employee.Employee", "Employee")
                        .WithMany("PreviousWorkExperiences")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Leave.CompensatoryLeaveRequest", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("frappe_HRMS.Domain.Leave.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId");

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Leave.LeaveApplication", b =>
                {
                    b.HasOne("frappe_HRMS.Domain.Company.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("frappe_HRMS.Domain.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("frappe_HRMS.Domain.Leave.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId");

                    b.HasOne("frappe_HRMS.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Company");

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.ExpenseClaim", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Claim.TravelRequest", b =>
                {
                    b.Navigation("CostingDetails");

                    b.Navigation("TravelItinerary");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Company.Company", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("frappe_HRMS.Domain.Employee.Employee", b =>
                {
                    b.Navigation("EducationalQualifications");

                    b.Navigation("EmployeeHistories");

                    b.Navigation("PreviousWorkExperiences");
                });
#pragma warning restore 612, 618
        }
    }
}
